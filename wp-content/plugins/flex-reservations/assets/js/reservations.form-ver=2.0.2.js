// Can modify class// Can modify button submit// Can modify loading effect// Require class: fs-wrapper,fs-loading-wrapper, fs-notice-wrapper, fs fields with prefix, success-wrapperjQuery(function ($) {    // Vendors inject function:    var wraper_selector = '.fs-wrapper',        form_selector = wraper_selector+' .fs-form';    var day_off = [];    var date_parse = {        'Sunday':0,        'Monday' : 1,        'Tuesday':2,        'Wednesday':3,        'Thursday':4,        'Friday':5,        'Saturday':6,    };    if(fsr_form_data && fsr_form_data.time_work && fsr_form_data.time_work.day_off)        fsr_form_data.time_work.day_off.forEach(function (item,index) {            if(date_parse[item] != undefined)                day_off.push(date_parse[item]);        });    $('.input-field.field-date:not([name="fs_date"])').each(function () {        $(this).datepicker({            dateFormat: 'yy-mm-dd',        });    });    $('.input-field.field-date[name="fs_date"]').each(function () {        $(this).datepicker({            dateFormat: 'yy-mm-dd',            minDate:fsr_form_data.current_date,            hideIfNoPrevNext:true,            beforeShowDay: function(date){                var check = true;                //in day off                check = (check) ? day_off.indexOf(date.getDay()) == -1 : false ;                //in holiday                if(check && (fsr_form_data.holiday instanceof Array))                {                    fsr_form_data.holiday.forEach(function (item,index) {                         var start = new Date(item.startDate),end = new Date(item.endDate);                         if(end < start)                             end=start;                         if(jQuery.datepicker.formatDate('yy-mm-dd', start) == jQuery.datepicker.formatDate('yy-mm-dd', date)                             || jQuery.datepicker.formatDate('yy-mm-dd', end) == jQuery.datepicker.formatDate('yy-mm-dd', date) )                         {                             check = false;                             return false;                         }                         if(date>start && date < end)                         {                             check = false;                             return false;                         }                    });                }                return [ check ];            }        });    })    $(".input-field.field-time").each(function () {        $(this).clockpicker({            autoclose: true        });    })    $(document).on('submit',form_selector,function (e) {        e.preventDefault();        submit_form(this);    }).on('change',form_selector+' .input-field',function () {        $(this).removeClass('required');    }).on('click','.ui-field-more_reservation',function () {        var $this = $(this),parent = $this.closest('.fs-wrapper');        var form  = parent.find('form.fs-form');        form.show();        form.find('.ui-field-error_notice').empty();        form.find('.input-field').val('');        parent.find('.success-wrapper').hide();    });    function get_form_data(form) {        var $form = $(form);        var data_send = {            action:$form.find('input[name="action"]').val(),            nonce:$form.find('input[name="nonce"]').val(),            data:{}        };        if(!data_send.action || !data_send.nonce)            return false;        $form.find('.input-field').each(function () {            var $this = $(this),name = $(this).attr('name'),value = $this.val();            $this.is(':checkbox') && (($this.attr('checked') == 'checked') || (value = ''));            $this.is('.field-date') && (value = (new Date(value)).toDateString());            data_send.data[name] = value;        });        return data_send;    }    function submit_form(form) {        var $form = $(form);         if($form.data('requesting') == 'yes')             return;        var form_data = get_form_data($form);        if(!form_data) return;        $form.data('requesting','yes');        $form.addClass('form-loading');        $.ajax({            type: "POST",            url: ajax_data.url,            data:form_data,            dataType:'JSON',            success: function (response) {                if(response.success !== 'success')                    handle_error_response(form,response);                else                    handle_success_response($form,response)            }        }).always(function () {            $form.data('requesting','no');            $form.removeClass('form-loading');        });    }    function handle_success_response(form,response) {        var parent = form.closest('.fs-wrapper');        form.hide();        parent.find('.success-wrapper').show().html(response.message);    }    function handle_error_response(form,response) {        var $form = $(form);        response['error_fields'].forEach(function (item,index) {            $form.find('[name="'+item+'"]').addClass('required');        });        var error_html = "";        response['message'].forEach(function (item,index) {            error_html+= "<li>"+item+"</li>";        });        if(error_html)            $form.find('.ui-field-error_notice').html('<ul>'+error_html+'</ul>');    }});